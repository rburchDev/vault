apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app.name }}
  namespace: {{ .Release.Namespace }}
  name: '{{ .Values.app.hostname }}'
spec:
  replicas: {{ .Values.specs.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      hostname: '{{ .Values.app.hostname }}'
      containers:
        - name: '{{ .Values.app.hostname }}'
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          livenessProbe:
            httpGet:
              port: {{ $.Values.service.port }}
              path: {{ $.Values.healthCheck.path }}
            initialDelaySeconds: {{ $.Values.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ $.Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ $.Values.healthCheck.timeoutSeconds }}
            failureThreshold: {{ $.Values.healthCheck.failureThreshold }}
          env:
          - name: MONGOURL
            value: {{ .Values.env.mongourl | b64dec }}
          - name: SECRET
            value: {{ .Values.env.secret | b64dec}}
          - name: EMAIL_PASSWORD
            value: {{ .Values.env.email | b64dec }}
          ports:
            - containerPort: {{ $.Values.service.port }}
